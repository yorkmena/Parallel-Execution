# Generate two log files on every execution.

#Here we have defined  two appenders with the name: userAppender and devAppender.
log4j.rootLogger=ALL,userAppender,devAppender

#Here we have set the userAppender as a customer Appender, which we have created by extending the FileAppender class. In resource package.
#Also we have defined the location where log is to be created.
log4j.appender.userAppender=resources.NewFileOnRebootAppender
log4j.appender.userAppender.file=./Reports/Userlogs

#Here we have set the devAppender as a customer Appender, which we have created by extending the FileAppender class. In resource package.
#Also we have defined the location where log is to be created.
log4j.appender.devAppender=resources.NewFileOnRebootAppender
log4j.appender.devAppender.file=./Reports/Devlogs

#Defined the level of log which are to be included
log4j.appender.userAppender.Threshold=DEBUG

#Defined a filter with the name a for userAppender. Purpose is to set the min and max level of log.
log4j.appender.userAppender.filter.a=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.userAppender.filter.a.LevelMin=INFO
log4j.appender.userAppender.filter.a.LevelMax=INFO

#Defined the level of log which are to be included
log4j.appender.devAppender.Threshold=INFO

#Here we have set layout of the appenders. It is for Modifying the layout of the logs.
log4j.appender.userAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.userAppender.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH:mm:ss}] %m%n

log4j.appender.devAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.devAppender.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH:mm:ss}] %m%n